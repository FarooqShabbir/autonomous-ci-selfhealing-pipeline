name: CI - Self-Healing Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  actions: write     # allow rerun of workflow
  contents: read
  issues: write      # allow opening an issue
  checks: write

env:
  RUNNER_TEMP: /tmp

jobs:
  test:
    name: Run simulated app (build/test)
    runs-on: ubuntu-latest
    outputs:
      test_result: ${{ steps.run_test.outputs.result }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps (if any)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run simulate_app
        id: run_test
        run: |
          set -o pipefail
          echo "Running simulate_app.py..."
          python simulate_app.py 2>&1 | tee run_output.log || true
          if [ "${PIPESTATUS[0]}" -eq 0 ]; then
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "result=failure" >> $GITHUB_OUTPUT
          fi

      - name: Upload raw run output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: raw-run-output
          path: run_output.log

  self_heal:
    name: Self-healing diagnostics & remediation
    needs: test
    runs-on: ubuntu-latest
    if: needs.test.outputs.test_result == 'failure'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps for diagnoser
        run: |
          pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run diagnostics and remediation
        id: diag
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
        run: |
          set -euo pipefail
          python scripts/diagnose_and_fix.py || true
          # The script writes "HEALED" or "UNHEALED" into ./heal_status.txt

      - name: Upload diagnostics artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: selfheal-artifacts
          path: |
            diagnostics.log
            heal_status.txt
            run_output.log
            # include any other logs the script might produce

      - name: Take action: rerun or open issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          RUN_ATTEMPT: ${{ github.run_attempt }}
        run: |
          set -euo pipefail
          STATUS=$(cat heal_status.txt || echo UNHEALED)
          echo "Heal status => $STATUS"
          # Prevent infinite reruns: only allow rerun if this is a first attempt (run_attempt == 1)
          if [ "$STATUS" = "HEALED" ]; then
            if [ "${RUN_ATTEMPT:-1}" -lt 3 ]; then
              echo "Requesting workflow rerun (attempt ${RUN_ATTEMPT})..."
              API="https://api.github.com/repos/${REPO}/actions/runs/${RUN_ID}/rerun"
              curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" -H "Accept: application/vnd.github+json" $API || true
            else
              echo "Run attempt ${RUN_ATTEMPT} >=3, will not auto-rerun. Marking as UNHEALED."
              echo "UNHEALED" > heal_status.txt
            fi
          else
            echo "Not healed â€” creating issue to notify developers..."
            TITLE="CI Self-Healer: Failure persists on run ${{ github.run_number }}"
            BODY="The automated self-healing attempted remediation but could not fix the failure.\n\nRepository: ${REPO}\nRun: ${{ github.server_url }}/${REPO}/actions/runs/${RUN_ID}\n\nDiagnostics and logs are attached as artifacts.\n\nSteps attempted:\n- Re-ran simulate_app\n- Attempted quick fixes (retries)\n\nPlease triage."
            # create issue
            curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${REPO}/issues \
              -d "$(jq -n --arg t "$TITLE" --arg b "$BODY" '{title:$t, body:$b, labels:["ci-failure","self-heal"] }')" || true
          fi
